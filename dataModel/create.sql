-- SCHEMA: logbook
CREATE SCHEMA LOGBOOK;
--    AUTHORIZATION postgres;

COMMENT ON SCHEMA LOGBOOK
IS 'Scheme for logbook';

CREATE SEQUENCE hibernate_sequence START 1 INCREMENT BY 1;

-- Table: logbook.logmessages
CREATE TABLE LOGBOOK.LOG_MESSAGES
(
  LOG_ID        BIGSERIAL                   NOT NULL,
  SEVERITY      TEXT                        NOT NULL,
  SUBSYSTEM     TEXT                        NOT NULL,
  MESSAGE       TEXT                        NOT NULL,
  CREATED_ON    TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  DOWNLOADED_ON TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  CONSTRAINT log_pkey PRIMARY KEY (LOG_ID)
);

-- Table: logbook.alert
CREATE TABLE LOGBOOK.ALERTS
(
  ALERT_ID    BIGSERIAL                   NOT NULL,
  SEVERITY    TEXT                        NOT NULL,
  SUBSYSTEM   TEXT                        NOT NULL,
  MESSAGE     TEXT                        NOT NULL,
  STATE       TEXT                        NOT NULL,
  CREATED_ON  TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  ASSIGNEE_ID BIGINT, -- can be null when first created by system
  CONSTRAINT alert_pkey PRIMARY KEY (ALERT_ID)
);

-- Table: logbook.notes
CREATE TABLE LOGBOOK.NOTES
(
  NOTE_ID    BIGSERIAL                   NOT NULL,
  AUTHOR_ID  BIGINT                      NOT NULL,
  ALERT_ID   BIGINT                      NOT NULL,
  MESSAGE    TEXT                        NOT NULL,
  CREATED_ON TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  CONSTRAINT note_pkey PRIMARY KEY (NOTE_ID),
  CONSTRAINT alert_fk FOREIGN KEY (ALERT_ID)
  REFERENCES LOGBOOK.ALERTS (ALERT_ID) MATCH SIMPLE
  ON UPDATE NO ACTION
  ON DELETE NO ACTION
);

-- Table: logbook.transitions
CREATE TABLE LOGBOOK.TRANSITIONS
(
  TRANSITION_ID BIGSERIAL                   NOT NULL,
  EXECUTED_BY   BIGINT                      NOT NULL,
  ALERT_ID      BIGINT                      NOT NULL,
  START_STATE   TEXT                        NOT NULL,
  END_STATE     TEXT                        NOT NULL,
  CREATED_ON    TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  CONSTRAINT transition_pkey PRIMARY KEY (TRANSITION_ID),
  CONSTRAINT alert_fk FOREIGN KEY (ALERT_ID)
  REFERENCES LOGBOOK.ALERTS (ALERT_ID) MATCH SIMPLE
  ON UPDATE NO ACTION
  ON DELETE NO ACTION
);

-- Table: logbook.alertOwnerHistory
CREATE TABLE LOGBOOK.ASSIGNEE_HISTORY
(
  ASSIGNEE_HISTORY_ID BIGSERIAL                   NOT NULL,
  EXECUTED_BY         BIGINT                      NOT NULL,
  OLD_ASSIGNEE_ID     BIGINT                      NOT NULL,
  NEW_ASSIGNEE_ID     BIGINT                      NOT NULL,
  ALERT_ID            BIGINT                      NOT NULL,
  CREATED_ON          TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  CONSTRAINT alertassignee_pkey PRIMARY KEY (ASSIGNEE_HISTORY_ID),
  CONSTRAINT alert_fk FOREIGN KEY (ALERT_ID)
  REFERENCES LOGBOOK.ALERTS (ALERT_ID) MATCH SIMPLE
  ON UPDATE NO ACTION
  ON DELETE NO ACTION
);